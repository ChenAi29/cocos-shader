{
  "ver": "1.0.25",
  "uuid": "8cd1bcf1-35bf-4a5a-a980-04b8ab0b7b54",
  "compiledShaders": [
    {
      "glsl1": {
        "vert": "\nprecision highp float;\nuniform mat4 cc_matViewProj;\nuniform mat4 cc_matWorld;\nattribute vec3 a_position;\nattribute vec4 a_color;\nvarying vec4 v_color;\n#if USE_TEXTURE\nattribute vec2 a_uv0;\nvarying vec2 v_uv0;\n#endif\nvoid main () {\n  vec4 pos = vec4(a_position, 1);\n  #if CC_USE_MODEL\n  pos = cc_matViewProj * cc_matWorld * pos;\n  #else\n  pos = cc_matViewProj * pos;\n  #endif\n  #if USE_TEXTURE\n  v_uv0 = a_uv0;\n  #endif\n  v_color = a_color;\n  gl_Position = pos;\n}",
        "frag": "\nprecision highp float;\n#if USE_ALPHA_TEST\n#endif\nvarying vec4 v_color;\n#if USE_TEXTURE\nvarying vec2 v_uv0;\nuniform sampler2D texture;\n#endif\nuniform vec2 u_tex_size;\nuniform vec2 u_resolution;\nuniform vec2 u_mouse;\nuniform vec2 u_radius;\nvoid main () {\n  vec2 mouse = vec2(u_mouse.x, u_resolution.y-u_mouse.y);\n  vec4 color = texture2D(texture, v_uv0);\n  vec2 dir = (v_uv0*u_tex_size.xy + (u_resolution.xy-u_tex_size.xy)/2.0)-mouse.xy;\n  float r = dot(dir, dir)/dot(u_radius, u_radius);\n  color *= 1.08-r;\n  gl_FragColor = vec4(color.rgb, 0.75);\n}"
      },
      "glsl3": {
        "vert": "\nprecision highp float;\nuniform CCGlobal {\n  mat4 cc_matView;\n  mat4 cc_matViewInv;\n  mat4 cc_matProj;\n  mat4 cc_matProjInv;\n  mat4 cc_matViewProj;\n  mat4 cc_matViewProjInv;\n  vec4 cc_cameraPos;\n  vec4 cc_time;\n  mediump vec4 cc_screenSize;\n  mediump vec4 cc_screenScale;\n};\nuniform CCLocal {\n  mat4 cc_matWorld;\n  mat4 cc_matWorldIT;\n};\nin vec3 a_position;\nin vec4 a_color;\nout vec4 v_color;\n#if USE_TEXTURE\nin vec2 a_uv0;\nout vec2 v_uv0;\n#endif\nvoid main () {\n  vec4 pos = vec4(a_position, 1);\n  #if CC_USE_MODEL\n  pos = cc_matViewProj * cc_matWorld * pos;\n  #else\n  pos = cc_matViewProj * pos;\n  #endif\n  #if USE_TEXTURE\n  v_uv0 = a_uv0;\n  #endif\n  v_color = a_color;\n  gl_Position = pos;\n}",
        "frag": "\nprecision highp float;\n#if USE_ALPHA_TEST\n  uniform ALPHA_TEST {\n    float alphaThreshold;\n  };\n#endif\nin vec4 v_color;\n#if USE_TEXTURE\nin vec2 v_uv0;\nuniform sampler2D texture;\n#endif\nuniform SearchLight {\n  vec2 u_tex_size;\n  vec2 u_resolution;\n  vec2 u_mouse;\n  vec2 u_radius;\n};\nvoid main () {\n  vec2 mouse = vec2(u_mouse.x, u_resolution.y-u_mouse.y);\n  vec4 color = texture2D(texture, v_uv0);\n  vec2 dir = (v_uv0*u_tex_size.xy + (u_resolution.xy-u_tex_size.xy)/2.0)-mouse.xy;\n  float r = dot(dir, dir)/dot(u_radius, u_radius);\n  color *= 1.08-r;\n  gl_FragColor = vec4(color.rgb, 0.75);\n}"
      }
    }
  ],
  "subMetas": {}
}